"use strict";(self.webpackChunktech_talks_in=self.webpackChunktech_talks_in||[]).push([[6435],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return a?n.createElement(g,o(o({ref:t},p),{},{components:a})):n.createElement(g,o({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9278:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={slug:"json-web-tokens",title:"JWT",authors:{name:"Pavan Kumar",title:"tech-talks Core Team",url:"https://github.com/mrpavan",image_url:"https://github.com/mrpavan.png"},tags:["jwt","jsonwebtokens","node","authentication","authorization"]},o=void 0,s={permalink:"/blog/json-web-tokens",source:"@site/blog/2022-05-27-json-web-tokens.md",title:"JWT",description:"You might have heard about JWT if you are in field of developing applications or not from other domains. JSON Web Token (JWT) is a standard for representing claims securely between two parties. It is typically used to securely transmit information between a server and a client, such as an API and a single-page application. JWTs are a useful tool for securely transmitting information between parties, and are commonly used in modern web applications for authentication and authorization",date:"2022-05-27T00:00:00.000Z",formattedDate:"May 27, 2022",tags:[{label:"jwt",permalink:"/blog/tags/jwt"},{label:"jsonwebtokens",permalink:"/blog/tags/jsonwebtokens"},{label:"node",permalink:"/blog/tags/node"},{label:"authentication",permalink:"/blog/tags/authentication"},{label:"authorization",permalink:"/blog/tags/authorization"}],readingTime:4.6,hasTruncateMarker:!0,authors:[{name:"Pavan Kumar",title:"tech-talks Core Team",url:"https://github.com/mrpavan",image_url:"https://github.com/mrpavan.png",imageURL:"https://github.com/mrpavan.png"}],frontMatter:{slug:"json-web-tokens",title:"JWT",authors:{name:"Pavan Kumar",title:"tech-talks Core Team",url:"https://github.com/mrpavan",image_url:"https://github.com/mrpavan.png",imageURL:"https://github.com/mrpavan.png"},tags:["jwt","jsonwebtokens","node","authentication","authorization"]},prevItem:{title:"Maximizing Your Sprints: The Ultimate Guide to Efficient Planning",permalink:"/blog/sprint-planning"},nextItem:{title:"From Social Media to SEO: Navigating the World of Digital Marketing",permalink:"/blog/digital-marketing"}},l={authorsImageUrls:[void 0]},c=[],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You might have heard about JWT if you are in field of developing applications or not from other domains. ",(0,r.kt)("strong",{parentName:"p"},"JSON Web Token")," (JWT) is a standard for representing claims securely between two parties. It is typically used to securely transmit information between a server and a client, such as an API and a single-page application. JWTs are a useful tool for securely transmitting information between parties, and are commonly used in modern web applications for authentication and authorization"),(0,r.kt)("p",null,"A JWT consists of three parts: a header, a payload, and a signature. The header typically consists of two parts: the type of the token, which is JWT, and the signing algorithm being used, such as HMAC SHA256 or RSA. The payload contains the claims. Claims are statements about an entity (typically, the user) and additional data. There are three types of claims: registered, public, and private claims. Registered claims are a set of predefined claims that are not mandatory but recommended, to provide a set of useful, interoperable claims. Some of the registered claims are: iss (issuer), exp (expiration time), sub (subject), aud (audience), and others. Public claims are claims that are defined in the IANA JSON Web Token Registry or defined in other specifications, but are not registered. Private claims are claims that are used to share information between parties that agree on using them and are neither registered or public claims..."))}u.isMDXComponent=!0}}]);