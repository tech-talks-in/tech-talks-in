<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.tech-talks-in/blog</id>
    <title>tech-talks Blog</title>
    <updated>2022-12-29T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.tech-talks-in/blog"/>
    <subtitle>tech-talks Blog</subtitle>
    <icon>https://www.tech-talks-in/img/techtalks-fav.ico</icon>
    <entry>
        <title type="html"><![CDATA[Playground - Live Coding]]></title>
        <id>live-coding-demo</id>
        <link href="https://www.tech-talks-in/blog/live-coding-demo"/>
        <updated>2022-12-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[playground - live coding in docusaurus]]></summary>
        <content type="html"><![CDATA[<p>Wanted to create something fun with jsx, Live coding. Go ahead try setting initial value of the counter and update function to your liking or write your own code. Give it a try! visit <strong>Live Coding Demo</strong> under tutorials on how to implement in your website</p><div class="playgroundContainer_X_Ta"><div class="playgroundHeader_dyrN">Live Editor</div><div class="playgroundEditor_Q6Y7" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace;color:#393A34;background-color:#f6f8fa"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autocapitalize="off" autocomplete="off" autocorrect="off" spellcheck="false" data-gramm="false">function LiveCode(props) {
    const [count, setCount] = useState(0);

    return (
        &lt;div&gt;
        &lt;h1&gt; {count} &lt;/h1&gt;
        &lt;button onClick={() =&gt; setCount(count + 1)}&gt;Add&lt;/button&gt;
        &lt;span&gt; &lt;/span&gt;
        &lt;button onClick={() =&gt; setCount(count - 1)}&gt;Sub&lt;/button&gt;
        &lt;/div&gt;
    )
}
</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">LiveCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span></div><div class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setCount</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span></div><div class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span></div><div class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span></div><div class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"> </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span></div><div class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">setCount</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript" style="color:#00009f">count </span><span class="token tag script language-javascript operator" style="color:#393A34">+</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Add</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span></div><div class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span></div><div class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">setCount</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript" style="color:#00009f">count </span><span class="token tag script language-javascript operator" style="color:#393A34">-</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Sub</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span></div><div class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span></div><div class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span></div><div class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block">
</span></div></pre><style>
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div><div class="playgroundHeader_dyrN">Result</div><div class="playgroundPreview_DzOI"><div>Loading...</div></div></div>]]></content>
        <author>
            <name>Pavan Kumar</name>
            <uri>https://github.com/mrpavan</uri>
        </author>
        <category label="api" term="api"/>
        <category label="development" term="development"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Public API's Listing]]></title>
        <id>public-api-listing</id>
        <link href="https://www.tech-talks-in/blog/public-api-listing"/>
        <updated>2022-12-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Collection of Open API's to work during development of any of your app ideas, includes free, paid and freemium based services that can be integrated with any application checkout thier websites for getting your own apikey, pricing information and documentations.]]></summary>
        <content type="html"><![CDATA[<p>Collection of Open API's to work during development of any of your app ideas, includes free, paid and freemium based services that can be integrated with any application <strong>checkout thier websites for getting your own apikey, pricing information and documentations</strong>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-key-required">API Key Required<a class="hash-link" href="#api-key-required" title="Direct link to heading">​</a></h3><ul><li><p><a href="https://auth0.com/" target="_blank" rel="noopener noreferrer">Auth0</a> : Easy to implement, adaptable authentication and authorization platform by okta, free plan with up to 7,000 active users and unlimited logins</p></li><li><p><a href="https://otp.dev/en/docs/" target="_blank" rel="noopener noreferrer">GetOTP</a> : GetOTP is a web service that helps you build a complete multichannel One Time Password (OTP) with almost no code. With a simple API call, you can implement your verification flow. No need to worry about retries or multiple channel logic. Free plan includes 100 requests for email OTP only over a month</p></li><li><p><a href="https://www.abstractapi.com/api/holidays-api#pricing" target="_blank" rel="noopener noreferrer">AbstractAPI Holidays</a>: Retrieve religious, non-public and public holidays for 200+ countries worldwide and for any specific year. They also provide ip lookup and others too. visit their <a href="https://www.abstractapi.com" target="_blank" rel="noopener noreferrer">website</a></p></li><li><p><a href="https://github.com/public-apis/public-apis" target="_blank" rel="noopener noreferrer">Public apis</a> : A collective list of over 1.4k free APIs for use in software and web development on github</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="no-api-key-or-authentication-required">NO API Key or authentication required<a class="hash-link" href="#no-api-key-or-authentication-required" title="Direct link to heading">​</a></h3><ul><li><p><a href="https://www.myip.com/api-docs/" target="_blank" rel="noopener noreferrer">my-ip</a> : gives you ip address info with location, simple to use <code>curl https://api.myip.com</code></p></li><li><p><a href="https://randomuser.me/api/" target="_blank" rel="noopener noreferrer">Random User Generator</a> : gives test user data with name, email, profile pic , address and many user related attrobutes</p></li><li><p><a href="https://open.er-api.com/v6/latest/USD" target="_blank" rel="noopener noreferrer">Exchange rates</a> : exchange rates conversion based on base currency suplied in currency codes<code>curl https://open.er-api.com/v6/latest/USD</code></p></li><li><p><a href="https://go-apod.herokuapp.com/apod" target="_blank" rel="noopener noreferrer">Daily Astronomy picture</a> : high quality space pics </p></li><li><p><a href="https://jsonplaceholder.typicode.com/posts/1" target="_blank" rel="noopener noreferrer">JSON Placeholder</a> : REST API for test data</p></li><li><p><a href="https://api.publicapis.org/entries" target="_blank" rel="noopener noreferrer">Public API</a> : api for <a href="https://github.com/public-apis/public-apis" target="_blank" rel="noopener noreferrer">public apis</a> project on github, supports other methods like /random and /categories</p></li><li><p><a href="https://v2.jokeapi.dev/joke/Any?safe-mode" target="_blank" rel="noopener noreferrer">Random Jokes</a> : jokes for a little laugh</p></li></ul>]]></content>
        <author>
            <name>Pavan Kumar</name>
            <uri>https://github.com/mrpavan</uri>
        </author>
        <category label="api" term="api"/>
        <category label="development" term="development"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Multiple Accounts]]></title>
        <id>github-multiple-accounts</id>
        <link href="https://www.tech-talks-in/blog/github-multiple-accounts"/>
        <updated>2022-11-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[To use two GitHub accounts on a Mac over ssh, you will need to set up separate ssh keys for each account.]]></summary>
        <content type="html"><![CDATA[<p>To use two GitHub accounts on a Mac over ssh, you will need to set up separate ssh keys for each account.</p><p>Follow the steps below:</p><ul><li><p>Generate a new ssh key for your second GitHub account. You can do this by running the ssh-keygen command in the terminal and following the prompts. Make sure to specify a different file name for the key than the one you used for your first account.</p></li><li><p>Add the public key for your second account to your GitHub account. You can do this by going to the "SSH and GPG keys" section of your GitHub profile settings and clicking the "New SSH key" button. Then, paste the contents of the public key file (located in the ~/.ssh directory on your Mac) into the "Key" field and give it a descriptive name.</p></li><li><p>Add the private key for your second account to your ssh agent. You can do this by running the following command in the terminal:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">username@hostname:~$</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh-add ~/.ssh/</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">private key </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Modify your ssh config file to specify which ssh key to use for each GitHub account. To do this, open the ~/.ssh/config file in a text editor and add the following lines:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">username@hostname:~$nano ~/.ssh/config</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Host github.com-</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">account1username</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  HostName github.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  User </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  IdentityFile ~/.ssh/</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">private key </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> name </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> account </span><span class="token operator file-descriptor important" style="color:#393A34">1</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Host github.com-</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">account2username</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  HostName github.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  User </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  IdentityFile ~/.ssh/</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">private key </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> name </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> account </span><span class="token operator file-descriptor important" style="color:#393A34">2</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>Replace <code>&lt;account1username&gt;</code> and <code>&lt;account2username&gt;</code> with the respective usernames for each account, and <code>&lt;private key file name for account 1&gt;</code> and <code>&lt;private key file name for account 2&gt;</code> with the respective private key file names for each account.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>check access by running below on terminal </div><div class="admonitionContent_S0QG"><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ssh</span><span class="token plain"> -T git@github.com-account1username</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Hi account1username! You've successfully authenticated, but GitHub does not provide shell access.</p></div></div><p>Repeat for <em>account2username</em>. </p><p><strong>Congratulations!</strong> you have successfuly authenticated and verified access to both the accounts and you may clone and do other operations by running git commands. Use the <strong>modified ssh URLs</strong> for your repositories to push and pull code from your separate accounts. For example, to push to a repository owned by your second account, you would use a URL like <code>git@github.com-&lt;account2username&gt;:&lt;username&gt;/&lt;repository&gt;.git</code>.</p><p>For any reason, if you ever wanted to check available identities in your ssh agent or delete them use below commands in your terminal</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Run with extreme caution</div><div class="admonitionContent_S0QG"><p>To list all identities <code>ssh-add -l</code> or <code>ssh-add -L</code></p><p>To remove all identities <code>ssh-add -D</code></p></div></div>]]></content>
        <author>
            <name>Pavan Kumar</name>
            <uri>https://github.com/mrpavan</uri>
        </author>
        <category label="github" term="github"/>
        <category label="ssh" term="ssh"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Maximizing Your Sprints: The Ultimate Guide to Efficient Planning]]></title>
        <id>sprint-planning</id>
        <link href="https://www.tech-talks-in/blog/sprint-planning"/>
        <updated>2022-06-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Are you ready to take your software development to the next level? Look no further than sprint planning! In this article, we'll dive into the world of Agile methodology and explore the importance of sprint activities in delivering value to customers in a timely manner. From sprint planning and daily scrum meetings, to sprint review and retrospective, we've got you covered. So buckle up and let's get started on our sprint journey!]]></summary>
        <content type="html"><![CDATA[<p>Are you ready to take your software development to the next level? Look no further than sprint planning! In this article, we'll dive into the world of Agile methodology and explore the importance of sprint activities in delivering value to customers in a timely manner. From sprint planning and daily scrum meetings, to sprint review and retrospective, we've got you covered. So buckle up and let's get started on our sprint journey! </p><p><strong>What is a Sprint?</strong>
A sprint is a time-boxed period in Agile software development, typically lasting between one and four weeks(though 2 weeks is quite common across software development teams), during which a defined set of work is completed. The goal of a sprint is to deliver a potentially releasable product increment.</p><p>Effective sprint planning, execution, and review are essential for project success. By breaking down work into smaller, manageable chunks, sprints allow teams to quickly adapt to changing requirements and deliver value to customers in a timely manner.</p><p><strong>Importance of Sprint in Agile Methodology</strong>
Sprints are a key component of Agile methodology, which emphasizes flexibility, collaboration, and rapid feedback. By breaking down work into smaller, manageable chunks, sprints allow teams to quickly adapt to changing requirements and deliver value to customers in a timely manner.</p><p><strong>Purpose of Sprint Activities</strong>
The purpose of sprint activities is to plan, execute, and review the work that will be completed during the sprint in order to deliver a potentially releasable product increment. These activities include sprint planning, daily scrum meetings, sprint review, and sprint retrospective.</p><p><strong>Key Roles and Responsibilities</strong></p><ul><li><strong>The Scrum Master</strong> is responsible for facilitating the meeting, ensuring that it stays on track, and addressing any issues that arise. </li><li><strong>The Product Owner</strong> is responsible for presenting the backlog and prioritizing tasks. </li><li><strong>The development team</strong> is responsible for estimating the time and effort required to complete the tasks and identifying any dependencies or risks.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sprint-planning">Sprint Planning<a class="hash-link" href="#sprint-planning" title="Direct link to heading">​</a></h3><p>Sprint planning is a collaborative effort between the development team, Scrum Master, and Product Owner. Before the sprint planning meeting, the team should set clear goals for the sprint and create a backlog of tasks to be completed.</p><ul><li><p>Setting Goals: The team should identify the goals for the sprint, including what features or functionality they want to deliver, and what improvements they want to make to the product.</p></li><li><p>Creating a Backlog: The Product Owner is responsible for creating and prioritizing a backlog of tasks that need to be completed during the sprint. The backlog should be reviewed and refined before the sprint planning meeting.</p></li><li><p>The Sprint Planning Meeting: During the sprint planning meeting, the development team, Scrum Master, and Product Owner will review the goals and backlog, and plan how to achieve them during the sprint.</p></li></ul><p>Estimating and Prioritizing Tasks: During the sprint planning meeting, the development team will estimate the time and effort required to complete each task in the backlog. The team will then prioritize the tasks based on the goals for the sprint and the priorities set by the Product Owner.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sprint-execution">Sprint Execution<a class="hash-link" href="#sprint-execution" title="Direct link to heading">​</a></h3><ul><li><p>Daily Scrum Meetings: Daily scrum meetings are short, 15-minute meetings that are held every day during the sprint. The purpose of these meetings is to give the development team an opportunity to plan their work for the day, and to identify any issues that need to be addressed.</p></li><li><p>The daily scrum meeting follows a simple structure, with each team member answering three questions: What did I do yesterday? What will I do today? Are there any blockers or issues?</p></li><li><p>Benefits for Team and Project: Daily scrum meetings help to ensure that the development team is on track to meet the sprint goals, and they provide an opportunity for the team to quickly address any issues or blockers that may arise.</p></li><li><p>Sprint Review: The sprint review is a meeting held at the end of each sprint to review the work that has been completed and to get feedback from stakeholders. The agenda for the sprint review should include a demonstration of the new features or functionality, a review of the sprint goals, and a discussion of any issues or risks that need to be addressed. The sprint review is an opportunity for stakeholders, such as the Product Owner, customers, and other members of the organization, to provide feedback and input on the work that has been completed. This feedback can be used to adjust the backlog and priorities for the next sprint.</p></li><li><p>Sprint Retrospective: The sprint retrospective is a meeting held at the end of each sprint to review the sprint process and identify areas for improvement. The outcomes of the sprint retrospective should include actionable items that can be implemented in the next sprint to improve the overall process. During the sprint retrospective, the development team, Scrum Master, and Product Owner should review the sprint process, including the sprint planning, daily scrum meetings, sprint review, and any other activities that were conducted. They should identify any challenges that arose and look for ways to improve the process in the next sprint.</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="typical-daily-tasks-in-a-2-weeks-sprint-plan">Typical daily tasks in a 2 weeks sprint plan<a class="hash-link" href="#typical-daily-tasks-in-a-2-weeks-sprint-plan" title="Direct link to heading">​</a></h3><p>The daily tasks for a 10-day sprint will depend on the specific goals and tasks that have been defined during the sprint planning meeting. However, here is a general outline of daily tasks that may be completed during a 10-day sprint:</p><p><strong>Day 1:</strong></p><ol><li>Review sprint goals and backlog</li><li>Identify and prioritize tasks for the day</li><li>Begin work on high-priority tasks</li></ol><p><strong>Day 2-9:</strong></p><ol><li>Attend daily scrum meeting to review progress and plan for the day</li><li>Continue work on high-priority tasks</li><li>Address any issues or blockers that arise</li><li>Participate in team collaboration and knowledge-sharing</li><li>Continuously update task status on the tracking tool</li></ol><p><strong>Day 10</strong> (Last Day of the Sprint)</p><ol><li>Wrap up any remaining tasks</li><li>Prepare for the sprint review and retrospective meetings</li><li>Review and update the backlog for the next sprint</li><li>Submit completed work for review</li></ol><p>It is also important to note that the daily scrum meeting is an important part of the sprint process, and should be held every day, regardless of the day in the sprint. This daily meeting helps the team to stay on track, identify any issues or blockers, and ensure that the sprint goals are being met.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="recap-of-key-takeaways">Recap of key takeaways<a class="hash-link" href="#recap-of-key-takeaways" title="Direct link to heading">​</a></h3><p>Sprints are a key component of Agile methodology, which allows teams to deliver value to customers in a timely manner. Sprint activities include sprint planning, daily scrum meetings, sprint review, and sprint retrospective. These activities help teams to plan, execute, and review the work that will be completed during the sprint in order to deliver a potentially releasable product increment.</p><p>Sprint activities can be implemented in any type of project, not just software development. By following the steps outlined in this article, one can start to implement sprints in their own projects and experience the benefits of Agile methodology.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="additional-resources">Additional Resources<a class="hash-link" href="#additional-resources" title="Direct link to heading">​</a></h3><p>To learn more about Agile methodology and sprints, refer to resources such as the Scrum Guide, "Agile Estimating and Planning" by Mike Cohn, and "Scrum: The Art of Doing Twice the Work in Half the Time" by Jeff Sutherland.</p><p>There are many tools available to assist with sprint planning and execution, such as <a href="https://www.atlassian.com/" target="_blank" rel="noopener noreferrer">Jira</a>, <a href="https://trello.com/" target="_blank" rel="noopener noreferrer">Trello</a>, <a href="https://asana.com/" target="_blank" rel="noopener noreferrer">Asana</a>, and <a href="https://www.momday.com" target="_blank" rel="noopener noreferrer">monday.com</a>. These tools can help teams to manage their backlog, track progress, and collaborate more effectively.</p>]]></content>
        <author>
            <name>Pavan Kumar</name>
            <uri>https://github.com/mrpavan</uri>
        </author>
        <category label="sprint" term="sprint"/>
        <category label="agile" term="agile"/>
        <category label="scrum" term="scrum"/>
        <category label="development team" term="development team"/>
        <category label="Strategic Sprint Planning" term="Strategic Sprint Planning"/>
        <category label="Step-by-Step Guide" term="Step-by-Step Guide"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[JWT]]></title>
        <id>json-web-tokens</id>
        <link href="https://www.tech-talks-in/blog/json-web-tokens"/>
        <updated>2022-05-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[You might have heard about JWT if you are in field of developing applications or not from other domains. JSON Web Token (JWT) is a standard for representing claims securely between two parties. It is typically used to securely transmit information between a server and a client, such as an API and a single-page application. JWTs are a useful tool for securely transmitting information between parties, and are commonly used in modern web applications for authentication and authorization]]></summary>
        <content type="html"><![CDATA[<p>You might have heard about JWT if you are in field of developing applications or not from other domains. <strong>JSON Web Token</strong> (JWT) is a standard for representing claims securely between two parties. It is typically used to securely transmit information between a server and a client, such as an API and a single-page application. JWTs are a useful tool for securely transmitting information between parties, and are commonly used in modern web applications for authentication and authorization</p><p>A JWT consists of three parts: a header, a payload, and a signature. The header typically consists of two parts: the type of the token, which is JWT, and the signing algorithm being used, such as HMAC SHA256 or RSA. The payload contains the claims. Claims are statements about an entity (typically, the user) and additional data. There are three types of claims: registered, public, and private claims. Registered claims are a set of predefined claims that are not mandatory but recommended, to provide a set of useful, interoperable claims. Some of the registered claims are: iss (issuer), exp (expiration time), sub (subject), aud (audience), and others. Public claims are claims that are defined in the IANA JSON Web Token Registry or defined in other specifications, but are not registered. Private claims are claims that are used to share information between parties that agree on using them and are neither registered or public claims...</p><p>The signature is used to verify that the sender of the JWT is who it says it is and to ensure that the message wasn't changed along the way. The signature is created by taking the encoded header, the encoded payload, a secret, and the algorithm specified in the header, and signing that. For example, if you want to use the HMAC SHA256 algorithm, the signature will be created in the following way:</p><p>HMACSHA256(
base64UrlEncode(header) + "." +
base64UrlEncode(payload),
secret)</p><p>To verify the signature, the recipient of the JWT needs to compute the signature and compare it to the one provided in the JWT. If they match, the JWT is considered to be valid.</p><p>JWTs are commonly used to authenticate users. When a user logs in to a system, the server generates a JWT that contains the user's information, such as the user's name, email, and other details, and signs it with a secret. The JWT is then sent back to the client, where it is stored in a cookie or local storage. When the client makes a request to the server, it includes the JWT in the request header. The server verifies the signature and, if it is valid, grants the client access to the requested resource.</p><p>JWTs have a number of benefits over traditional authentication methods, such as cookies and sessions. They are stateless, meaning that the server does not need to store any information about the client in order to verify the JWT. This makes them scalable and easy to implement. They are also secure, as they are signed and can't be modified without the signature being invalidated.</p><p><strong>Example</strong>
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</p><p>This JWT has three parts, separated by dots (.). The first part is the header, which consists of the type of the token (JWT) and the signing algorithm being used (HS256). The second part is the payload, which contains the claims. In this case, the claims are the subject (sub), which is the user's ID, and the name (name) of the user. The third part is the signature, which is used to verify that the sender of the JWT is who it says it is and to ensure that the message wasn't changed along the way.</p><p>Here is the same JWT, with the parts decoded:</p><p>Header:
{
"alg": "HS256",
"typ": "JWT"
}</p><p>Payload:
{
"sub": "1234567890",
"name": "John Doe",
"iat": 1516239022
}</p><p>To create this JWT, you would first need to create the header and payload as JSON objects, and then encode them using base64Url encoding. Then, you would create the signature by signing the encoded header and payload with a secret using the HMAC SHA256 algorithm.</p><p>To verify the signature of this JWT, you would need to decode the header and payload and then recompute the signature using the same algorithm and secret. If the signature you compute matches the one provided in the JWT, the JWT is considered to be valid.</p><p><strong>nodejs sample</strong></p><p>To use JWTs in a Node.js application, you can use the jsonwebtoken library. This library provides functions for creating and verifying JWTs.</p><p>Here is an example of how you can use the jsonwebtoken library to create a JWT:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> jwt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'jsonwebtoken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> payload </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">sub</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1234567890'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'John Doe'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> secret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'my-secret'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> jwt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">sign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> secret</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The sign() function takes the payload and the secret as arguments, and returns the JWT. The payload can be any JSON object, and the secret is a string that is used to sign the JWT.</p><p>Here is an example of how you can use the jsonwebtoken library to verify a JWT:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> jwt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'jsonwebtoken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> secret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'my-secret'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> payload </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> jwt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">verify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">token</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> secret</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The verify() function takes the JWT and the secret as arguments, and returns the payload if the signature is valid. If the signature is invalid, it throws an error.</p><p>You can also pass additional options to the sign() and verify() functions, such as the expiration time of the JWT or the audience for which the JWT is intended.</p>]]></content>
        <author>
            <name>Pavan Kumar</name>
            <uri>https://github.com/mrpavan</uri>
        </author>
        <category label="jwt" term="jwt"/>
        <category label="jsonwebtokens" term="jsonwebtokens"/>
        <category label="node" term="node"/>
        <category label="authentication" term="authentication"/>
        <category label="authorization" term="authorization"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MDX Sample]]></title>
        <id>mdx-sample-post</id>
        <link href="https://www.tech-talks-in/blog/mdx-sample-post"/>
        <updated>2021-04-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Simple mdx sample code Docusaurus Markdown features, such as MDX.]]></summary>
        <content type="html"><![CDATA[<p>Simple mdx sample code <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content>
        <author>
            <name>Sébastien Lorber</name>
            <uri>https://sebastienlorber.com</uri>
        </author>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
</feed>